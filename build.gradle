plugins {
  id 'java-gradle-plugin'
  id 'groovy'
  id 'maven-publish'
}

repositories {
  gradlePluginPortal()
  jcenter()
}

dependencies {
  implementation localGroovy()
  implementation "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:${testsetsPluginVersion}"

  testImplementation gradleTestKit()
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
  // To use JUnit5 Jupiter
  useJUnitPlatform()

  // Tests summary (displayed at the end)
  afterSuite { desc, result ->
    if (!desc.parent) {
      println "\nTests result: ${result.resultType}"
      println "Tests summary: ${result.testCount} tests, " +
              "${result.successfulTestCount} succeeded, " +
              "${result.failedTestCount} failed, " +
              "${result.skippedTestCount} skipped"
    }
  }
}

gradlePlugin {
  plugins {
    fridaGradleJava {
      id = "com.ekino.oss.plugin.java"
      implementationClass = "com.ekino.oss.plugin.JavaPlugin"
    }
  }
}

// Nota Bene : variables ${publishingBaseUrl}, ${publishingLogin} and ${publishingPassword}
// are provided using Gitlab CI/CD variables (cf Settings > CI/CD > Variables)
// and prefixed by "ORG_GRADLE_PROJECT_"
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
  repositories {
    maven {
      url = "${publishingBaseUrl}${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}/"
      credentials {
        username = "${publishingLogin}"
        password = "${publishingPassword}"
      }
    }
  }
}
