plugins {
  id 'java-gradle-plugin'
  id 'groovy'
  id 'maven-publish'
  id 'signing'
}

repositories {
  gradlePluginPortal()
  jcenter()
}

dependencies {
  implementation localGroovy()
  implementation "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:${testsetsPluginVersion}"

  testImplementation gradleTestKit()
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
  // To use JUnit5 Jupiter
  useJUnitPlatform()

  // Tests summary (displayed at the end)
  afterSuite { desc, result ->
    if (!desc.parent) {
      println "\nTests result: ${result.resultType}"
      println "Tests summary: ${result.testCount} tests, " +
              "${result.successfulTestCount} succeeded, " +
              "${result.failedTestCount} failed, " +
              "${result.skippedTestCount} skipped"
    }
  }
}

gradlePlugin {
  plugins {
    gradleJava {
      id = "com.ekino.oss.gradle.plugin.java"
      implementationClass = "com.ekino.oss.gradle.plugin.JavaPlugin"
    }
  }
}



publishing {
  publications {
    mavenJava(MavenPublication) {

      pom {
        name = 'Gradle java plugin'
        description = 'Java plugin applying some configuration for your builds (mavenPublish, testSets, etc ...)'
        url = 'https://github.com/ekino/gradle-java-plugin'
        licenses {
          license {
            name = 'MIT License (MIT)'
            url = 'https://opensource.org/licenses/mit-license'
          }
        }
        developers {
          developer {
            organization = 'ekino'
            organizationUrl = 'https://www.ekino.com/'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/ekino/gradle-java-plugin.git'
          developerConnection = 'scm:git:ssh://github.com:ekino/gradle-java-plugin.git'
          url = 'https://github.com/ekino/gradle-java-plugin'
        }
      }
      
      from components.java
    }
  }
  repositories {
    maven {
      url = "${project.version.endsWith("SNAPSHOT") ? "https://oss.sonatype.org/content/repositories/snapshots/" : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"}"
      credentials {
        username = "${ossrhUsername}"
        password = "${ossrhPassword}"
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}
